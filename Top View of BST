#include<bits/stdc++.h>
using namespace std;
class node
{
    public:
       int data;
       node *left,*right;
       node(int data)
       {
           this->data=data;
           this->left=nullptr;
           this->right=nullptr;
       }
};
node* insert(node *root,int data)
{
    if(!root)
    {
        return new node(data);
    }
    if(data < root->data)
    {
        root->left=insert(root->left,data);
    }
    else if(data>root->data)
    {
        root->right=insert(root->right,data);
    }
    return root;
}
void getTopOrder(node* root, int hd, map<int,int>&m)
{
	if (root == NULL)
		return;
	if(m[hd]==0)
	{
    	m[hd]=root->data;
	}
	getTopOrder(root->left, hd-1,m);
	getTopOrder(root->right, hd+1,m);
}
void printTopOrder(node* root)
{
	map<int,int> m;
	int hd=0;
	getTopOrder(root,hd,m);
	for(auto it=m.begin(); it!=m.end(); it++)
	{
	    cout<<it->second<< " ";
	}
}
void inorder(node *root)
{
    if(root==NULL)
       return ;
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}
int main()
{
    int ch;
    int maxlevel=0;
    node *root=nullptr;
    while(true)
    {
        cin>>ch;
        if(ch<1)
           break;
        else
           root=insert(root,ch);
    }
    cout<<"Inorder"<<endl;
    inorder(root);
    cout<<endl;
    cout<<"Top Order"<<endl;
    printTopOrder(root);
}
